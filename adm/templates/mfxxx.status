#!/bin/bash

{% if MFMODULE != "MFADMIN" %}
ADMIN_HOSTNAME=$(env |grep "^{{MFMODULE}}_ADMIN_HOSTNAME=" |awk -F '=' '{print $2;}')
ADMIN_SEND_MFLOG_LOGS=$(env |grep "^{{MFMODULE}}_ADMIN_SEND_MFLOG_LOGS=" |awk -F '=' '{print $2;}')
NGINX_FLAG=$(env |grep "^{{MFMODULE}}_NGINX_FLAG=" |awk -F '=' '{print $2;}')
ADMIN_SEND_NGINX_LOGS=$(env |grep "^{{MFMODULE}}_ADMIN_SEND_NGINX_LOGS=" |awk -F '=' '{print $2;}')
{% endif %}

. ${MFEXT_HOME}/lib/bash_utils.sh

if test "${1:-}" = "--help"; then
    echo "usage {{MFMODULE_LOWERCASE}}.status"
    echo "  => test the {{MFMODULE_LOWERCASE}} module"
    exit 0
fi

exit_if_root

cd "${MFMODULE_RUNTIME_HOME}" || exit 1

PLUGIN_NAME=$(env |grep ^{{MFMODULE}}_CURRENT_PLUGIN_NAME |awk -F '=' '{print $2;}')
if test "${PLUGIN_NAME}" != ""; then
    echo "ERROR: you can't use {{MFMODULE_LOWERCASE}}.status inside a plugin_env"
    exit 1
fi

{% if MFMODULE != "MFEXT" %}
CONFIG_TARGET=$(readlink -f "${MFMODULE_RUNTIME_HOME}/config/config.ini" 2>/dev/null)
if test "${CONFIG_TARGET}" != ""; then
    CONFIG_TIMESTAMP=$(date -r "${CONFIG_TARGET}" +%s 2>/dev/null)
    if test "${CONFIG_TIMESTAMP}" != ""; then
        if test "{% raw %}${{% endraw %}{{MFMODULE}}_CONF_GENERATION_TIME{% raw %}}{% endraw %}" -lt "${CONFIG_TIMESTAMP}"; then
            echo_bold "WARNING: your environment is outdated => please reload your terminal before playing with {{MFMODULE_LOWERCASE}}.status"
            exit 1
        fi
    fi
fi
{% endif %}

if test "$1" != "QUIET"; then
    LINE="*****     CHECKING ${MFMODULE}     *****"
    N=`echo "${LINE}" |wc -c`
    HEADER=`echo "**************************************************************" |cut -c 2-${N}`
    echo_bold "${HEADER}"
    echo_bold "${LINE}"
    echo_bold "${HEADER}"
    echo "  "
fi

RES=0
if test -f ${MFMODULE_HOME}/config/circus.ini; then
    _circus.status || RES=1
fi

# Checking module crontab is not empty
echo -n "- Checking crontab is not empty..."
echo_running

if hash crontab 2>/dev/null; then
    N=`crontab -l | wc -l`
    if test ${N} -gt 0; then
        echo_ok
    else
        echo_nok "(crontab is empty)"
        RES=1
    fi
else
    echo_warning "(no crontab installed)"
fi

{% if MFMODULE != "MFADMIN" %}
if test "${ADMIN_SEND_MFLOG_LOGS}" = "1"; then
    if test "${ADMIN_HOSTNAME}" != "null"; then
        circus_status_watcher.sh mflogs2mfadmin || RES=1
    fi
fi
if test "${ADMIN_SEND_NGINX_LOGS}" = "1"; then
    if test "${ADMIN_HOSTNAME}" != "null"; then
        if test "${NGINX_FLAG}" = "1"; then
            circus_status_watcher.sh nginxlogs2mfadmin || RES=1
        fi
    fi
fi
{% endif %}

{% block custom %}
# Can be replaced by mfxxx.status.custom
{% endblock %}

if test ${RES} -ne 0; then
    echo ""
    echo_bold "ERROR(S) DETECTED DURING ${MFMODULE} CHECK"
else
    if test "$1" != "QUIET"; then
        echo " "
        echo_bold "OK !"
    fi
fi

exit ${RES}
